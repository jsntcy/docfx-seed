### YamlMime:ManagedReference
items:
- uid: CatLibrary.ICatExtension
  commentId: T:CatLibrary.ICatExtension
  id: ICatExtension
  parent: CatLibrary
  children:
  - CatLibrary.ICatExtension.Play(CatLibrary.ICat,System.String)
  - CatLibrary.ICatExtension.Sleep(CatLibrary.ICat,System.Int64)
  langs:
  - csharp
  - vb
  name: ICatExtension
  nameWithType: ICatExtension
  fullName: CatLibrary.ICatExtension
  type: Class
  source:
    remote:
      path: src/SampleClass1/CatLibrary/Class1.cs
      branch: xuzhoperf
      repo: https://github.com/ansyral/docfx-seed.git
    id: ICatExtension
    path: src/SampleClass1/CatLibrary/Class1.cs
    startLine: 326
  assemblies:
  - CatLibrary
  namespace: CatLibrary
  summary: "\nIt's the class that contains ICat interface's extension method.\n<p>This class must be <strong>public</strong> and <strong>static</strong>.</p>\n<p>Also it shouldn't be a geneic class</p>\n"
  example: []
  syntax:
    content: public static class ICatExtension
    content.vb: Public Module ICatExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CatLibrary.ICatExtension.Sleep(CatLibrary.ICat,System.Int64)
  commentId: M:CatLibrary.ICatExtension.Sleep(CatLibrary.ICat,System.Int64)
  id: Sleep(CatLibrary.ICat,System.Int64)
  isExtensionMethod: true
  parent: CatLibrary.ICatExtension
  langs:
  - csharp
  - vb
  name: Sleep(ICat, Int64)
  nameWithType: ICatExtension.Sleep(ICat, Int64)
  fullName: CatLibrary.ICatExtension.Sleep(CatLibrary.ICat, System.Int64)
  type: Method
  source:
    remote:
      path: src/SampleClass1/CatLibrary/Class1.cs
      branch: xuzhoperf
      repo: https://github.com/ansyral/docfx-seed.git
    id: Sleep
    path: src/SampleClass1/CatLibrary/Class1.cs
    startLine: 333
  assemblies:
  - CatLibrary
  namespace: CatLibrary
  summary: "\nExtension method hint that how long the cat can sleep.\n"
  example: []
  syntax:
    content: public static void Sleep(this ICat icat, long hours)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Sleep(icat As ICat, hours As Long)
    parameters:
    - id: icat
      type: CatLibrary.ICat
      description: The type will be extended.
    - id: hours
      type: System.Int64
      description: The length of sleep.
  overload: CatLibrary.ICatExtension.Sleep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CatLibrary.ICatExtension.Play(CatLibrary.ICat,System.String)
  commentId: M:CatLibrary.ICatExtension.Play(CatLibrary.ICat,System.String)
  id: Play(CatLibrary.ICat,System.String)
  isExtensionMethod: true
  parent: CatLibrary.ICatExtension
  langs:
  - csharp
  - vb
  name: Play(ICat, String)
  nameWithType: ICatExtension.Play(ICat, String)
  fullName: CatLibrary.ICatExtension.Play(CatLibrary.ICat, System.String)
  type: Method
  source:
    remote:
      path: src/SampleClass1/CatLibrary/Class1.cs
      branch: xuzhoperf
      repo: https://github.com/ansyral/docfx-seed.git
    id: Play
    path: src/SampleClass1/CatLibrary/Class1.cs
    startLine: 340
  assemblies:
  - CatLibrary
  namespace: CatLibrary
  summary: "\nExtension method to let cat play\n"
  example: []
  syntax:
    content: public static void Play(this ICat icat, string toy)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Play(icat As ICat, toy As String)
    parameters:
    - id: icat
      type: CatLibrary.ICat
      description: Cat
    - id: toy
      type: System.String
      description: Something to play
  overload: CatLibrary.ICatExtension.Play*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CatLibrary
  commentId: N:CatLibrary
  isExternal: false
  name: CatLibrary
  nameWithType: CatLibrary
  fullName: CatLibrary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: CatLibrary.ICatExtension.Sleep*
  commentId: Overload:CatLibrary.ICatExtension.Sleep
  isExternal: false
  name: Sleep
  nameWithType: ICatExtension.Sleep
  fullName: CatLibrary.ICatExtension.Sleep
- uid: CatLibrary.ICat
  commentId: T:CatLibrary.ICat
  parent: CatLibrary
  isExternal: false
  name: ICat
  nameWithType: ICat
  fullName: CatLibrary.ICat
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: CatLibrary.ICatExtension.Play*
  commentId: Overload:CatLibrary.ICatExtension.Play
  isExternal: false
  name: Play
  nameWithType: ICatExtension.Play
  fullName: CatLibrary.ICatExtension.Play
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
